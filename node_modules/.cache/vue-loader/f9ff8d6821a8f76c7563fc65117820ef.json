{"remainingRequest":"C:\\Users\\jesus\\Desktop\\Desarrollo Software\\FRAN\\VUE\\ClimaBancolombia\\climabco\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\jesus\\Desktop\\Desarrollo Software\\FRAN\\VUE\\ClimaBancolombia\\climabco\\src\\App.vue?vue&type=style&index=0&id=7ba5bd90&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\jesus\\Desktop\\Desarrollo Software\\FRAN\\VUE\\ClimaBancolombia\\climabco\\src\\App.vue","mtime":1622082098690},{"path":"C:\\Users\\jesus\\Desktop\\Desarrollo Software\\FRAN\\VUE\\ClimaBancolombia\\climabco\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\jesus\\Desktop\\Desarrollo Software\\FRAN\\VUE\\ClimaBancolombia\\climabco\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\jesus\\Desktop\\Desarrollo Software\\FRAN\\VUE\\ClimaBancolombia\\climabco\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\jesus\\Desktop\\Desarrollo Software\\FRAN\\VUE\\ClimaBancolombia\\climabco\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\jesus\\Desktop\\Desarrollo Software\\FRAN\\VUE\\ClimaBancolombia\\climabco\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKQGltcG9ydCAiLi9hc3NldHMvYW5pbWF0aW9uLmNzcyI7CkBpbXBvcnQgIi4vYXNzZXRzL2N1c3RvbS5jc3MiOwo="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuRA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div id=\"main\" :class=\"isDay ? 'day' : 'night'\">\n\n\n\n    <div class=\"container \">\n      <h1 class=\"title text-center\">Consulta la ciudad</h1>\n      <form class=\"search-location\" v-on:submit.prevent=\"getWeather\">\n        <input\n          type=\"text\"\n          class=\"form-control text-muted form-rounded p-4 shadow-sm\"\n          placeholder=\"Cual ciudad?\"\n          v-model=\"citySearch\"\n          autocomplete=\"off\"\n        />\n      </form>\n      <p class=\"text-center my-3\" v-if=\"cityFound\">No city found</p>\n      <div\n        class=\"card rounded my-3 shadow-lg back-card overflow-hidden\"\n        v-if=\"visible\"\n      >\n        <!-- weather animation container -->\n        <div>\n          <div icon=\"sunny\" v-if=\"clearSky\">\n            <span class=\"sun\"></span>\n          </div>\n\n          <div icon=\"snowy\" v-if=\"snowy\">\n            <ul>\n              <li></li>\n              <li></li>\n              <li></li>\n              <li></li>\n              <li></li>\n              <li></li>\n              <li></li>\n              <li></li>\n              <li></li>\n              <li></li>\n              <li></li>\n              <li></li>\n              <li></li>\n            </ul>\n          </div>\n\n          <div icon=\"stormy\" v-if=\"stormy\">\n            <span class=\"cloud\"></span>\n            <ul>\n              <li></li>\n              <li></li>\n              <li></li>\n              <li></li>\n              <li></li>\n            </ul>\n          </div>\n          <div icon=\"cloudy\" v-if=\"cloudy\">\n            <span class=\"cloud\"></span>\n            <span class=\"cloud\"></span>\n          </div>\n          <div icon=\"nightmoon\" v-if=\"clearNight\">\n            <span class=\"moon\"></span>\n            <span class=\"meteor\"></span>\n          </div>\n        </div>\n\n        <!-- Top of card starts here -->\n        <div class=\"card-top text-center\" style=\"margin-bottom: 15rem\">\n          <div class=\"city-name my-3\">\n            <p>{{ weather.cityName }}, {{ weather.country }}</p>\n            <span>...</span>\n           <p class=\"my-4\">{{ weather.description }}</p>\n          </div>\n        </div>\n\n\n        <div class=\"card\" style=\"width: 18rem;\">\n  <div class=\"card-body\" style=\"border-width: medium; border-style: outset; box-shadow: 2px 2px 5px #000;\">\n    <h5 class=\"card-title\" style=\"color: red;\">Temperatura actual:</h5>\n    <h6 class=\"card-subtitle mb-2 text-muted\">{{ weather.temperature }} °C</h6>\n\n\n\n    <h5 class=\"card-title\" style=\"color: red;\">Temperatura mas baja:</h5>\n    <h6 class=\"card-subtitle mb-2 text-muted\">{{  weather.lowTemp }} °C</h6>\n\n     <h5 class=\"card-title\" style=\"color: red;\">Temperatura mas alta:</h5>\n    <h6 class=\"card-subtitle mb-2 text-muted\">{{  weather.highTemp }} °C</h6>\n\n\n  \n  <div class=\"accordion\" id=\"accordionExample\">\n  <div class=\"accordion-item\">\n    <h2 class=\"accordion-header\" id=\"headingOne\">\n      <button class=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\n        Accordion Item #1\n      </button>\n    </h2>\n    <div id=\"collapseOne\" class=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\n      <div class=\"accordion-body\">\n        <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\n      </div>\n    </div>\n  </div>\n  </div>\n   \n  \n   \n  </div>\n \n</div>\n\n  \n\n        <!-- top of card ends here -->\n\n        <!--card middle body, card body used cos I want to just update the innerHTML -->\n        <div class=\"card-body\">\n          <!-- card middle starts here -->\n          <div class=\"card-mid\">\n            <div class=\"row\">\n              <div class=\"col-12 text-center temp\">\n                <span>{{ weather.temperature }}&deg;C</span>\n                <p class=\"my-4\">{{ weather.description }}</p>\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"col d-flex justify-content-between px-5 mx-5\">\n                <p>\n                  \n                  <img src=\"./assets/down.svg\" alt=\"\" />\n                  {{ weather.lowTemp }}&deg;C\n                </p>\n                <p>\n                  <img src=\"./assets/up.svg\" alt=\"\" />\n                  {{ weather.highTemp }}&deg;C\n                </p>\n              </div>\n            </div>\n          </div>\n          <!-- card middle ends here -->\n\n          <!-- card bottom starts here -->\n          <div class=\"card-bottom px-5 py-4 row\">\n            <div class=\"col text-center\">\n              <p>{{ weather.feelsLike }}&deg;C</p>\n              <span>Feels like</span>\n            </div>\n            <div class=\"col text-center\">\n              <p>{{ weather.humidity }}%</p>\n              <span>humidity</span>\n            </div>\n          </div>\n\n          <!-- card bottom ends here -->\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n\n export default {\n  data() {\n    return {\n      cityFound: false,\n      visible: false,\n      stormy: false,\n      cloudy: false,\n      clearSky: false,\n      clearNight: false,\n      snowy: false,\n\n      isDay: true,\n      citySearch: \"\",\n      weather: {\n        cityName: \"Gwarinpa\",\n        country: \"NG\",\n        temperature: 12,\n        description: \"Clouds everywhere\",\n        lowTemp: \"19\",\n        highTemp: \"30\",\n        feelsLike: \"20\",\n        humidity: \"55\",\n      },\n    };\n  },\n  methods: {\n    getWeather: async function () {\n      console.log(this.citySearch);\n      const key = \"5689b81846c539fff1a9562e64808dba\";\n      const baseURL = `http://api.openweathermap.org/data/2.5/weather?q=${this.citySearch}&appid=${key}&units=metric`;\n\n      //fetch weather\n      try {\n        const response = await fetch(baseURL);\n        const data = await response.json();\n        console.log(data);\n        this.citySearch = \"\";\n        this.weather.cityName = data.name;\n        this.weather.country = data.sys.country;\n        this.weather.temperature = Math.round(data.main.temp);\n        console.log(this.weather.temperature);\n        this.weather.description = data.weather[0].description;\n        this.weather.lowTemp = Math.round(data.main.temp_min);\n        this.weather.highTemp = Math.round(data.main.temp_max);\n        this.weather.feelsLike = Math.round(data.main.feels_like);\n        this.weather.humidity = Math.round(data.main.humidity);\n\n        const timeOfDay = data.weather[0].icon;\n\n        ///check for time of day\n        if (timeOfDay.includes(\"n\")) {\n          this.isDay = false;\n        } else {\n          this.isDay = true;\n        }\n\n        const mainWeather = data.weather[0].main;\n        //check weather animations\n        if (mainWeather.includes(\"Clouds\")) {\n          this.stormy = false;\n          this.cloudy = true;\n          this.clearSky = false;\n          this.clearNight = false;\n          this.snowy = false;\n        }\n        if (mainWeather.includes(\"Clouds\")) {\n          this.stormy = false;\n          this.cloudy = true;\n          this.clearSky = false;\n          this.clearNight = false;\n          this.snowy = false;\n        }\n        if (\n          mainWeather.includes(\"Thunderstorm\") ||\n          mainWeather.includes(\"Rain\")\n        ) {\n          this.stormy = true;\n          this.cloudy = false;\n          this.clearSky = false;\n          this.clearNight = false;\n          this.snowy = false;\n        }\n        if (mainWeather.includes(\"Clear\") && this.isDay) {\n          this.stormy = false;\n          this.cloudy = false;\n          this.clearSky = true;\n          this.clearNight = false;\n          this.snowy = false;\n        }\n        if (mainWeather.includes(\"Clouds\") && !this.isDay) {\n          this.stormy = false;\n          this.cloudy = false;\n          this.clearSky = false;\n          this.clearNight = true;\n          this.snowy = false;\n        }\n        if (mainWeather.includes(\"Snow\")) {\n          this.stormy = false;\n          this.cloudy = false;\n          this.clearSky = false;\n          this.clearNight = false;\n          this.snowy = true;\n        }\n\n        this.visible = true;\n        this.cityFound = false;\n      } catch (error) {\n        console.log(error);\n        this.cityFound = true;\n        this.visible = false;\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n@import \"./assets/animation.css\";\n@import \"./assets/custom.css\";\n</style>\n"]}]}